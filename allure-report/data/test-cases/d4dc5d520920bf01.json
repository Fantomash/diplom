{"uid":"d4dc5d520920bf01","name":"test_login","fullName":"tests.ui.test_login#test_login","historyId":"5a0a7ce384a2228b6ffc6ed23582f115","time":{"start":1702841665384,"stop":1702841666865,"duration":1481},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x011F6E73+174291]\n\t(No symbol) [0x01120AC1]\n\t(No symbol) [0x00E36FF6]\n\t(No symbol) [0x00E3AEAC]\n\t(No symbol) [0x00E3C585]\n\t(No symbol) [0x00E3C622]\n\t(No symbol) [0x00E6AF64]\n\t(No symbol) [0x00E6A5D5]\n\t(No symbol) [0x00E62B4E]\n\t(No symbol) [0x00E8700C]\n\t(No symbol) [0x00E625B0]\n\t(No symbol) [0x00E87414]\n\t(No symbol) [0x00E9A104]\n\t(No symbol) [0x00E86DA6]\n\t(No symbol) [0x00E61034]\n\t(No symbol) [0x00E61F8D]\n\tGetHandleVerifier [0x012949CC+820268]\n\tsqlite3_dbdata_init [0x01354EBE+652494]\n\tsqlite3_dbdata_init [0x013548D9+650985]\n\tsqlite3_dbdata_init [0x0134962C+605244]\n\tsqlite3_dbdata_init [0x0135586B+654971]\n\t(No symbol) [0x0112FEBC]\n\t(No symbol) [0x01128428]\n\t(No symbol) [0x0112854D]\n\t(No symbol) [0x01115858]\n\tBaseThreadInitThunk [0x75B17BA9+25]\n\tRtlInitializeExceptionChain [0x7749BD2B+107]\n\tRtlClearBits [0x7749BCAF+191]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"349fb4b87b336a0871ba0aad0da8b896\")>\n\n    @allure.feature(\"Login tests\")\n    def test_login(driver):\n        login = AirbnbLoginTest(driver)\n        login.open_login_page()\n>       login.perform_login(LoginLocators.EMAIL_INPUT, LoginLocators.PASSWORD_INPUT)\n\ntests\\ui\\test_login.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:28: in perform_login\n    profile_menu.click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022F328FB490>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...dInitThunk [0x75B17BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7749BD2B+107]\\\\n\\\\tRtlClearBits [0x7749BCAF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x011F6E73+174291]\nE       \t(No symbol) [0x01120AC1]\nE       \t(No symbol) [0x00E36FF6]\nE       \t(No symbol) [0x00E3AEAC]\nE       \t(No symbol) [0x00E3C585]\nE       \t(No symbol) [0x00E3C622]\nE       \t(No symbol) [0x00E6AF64]\nE       \t(No symbol) [0x00E6A5D5]\nE       \t(No symbol) [0x00E62B4E]\nE       \t(No symbol) [0x00E8700C]\nE       \t(No symbol) [0x00E625B0]\nE       \t(No symbol) [0x00E87414]\nE       \t(No symbol) [0x00E9A104]\nE       \t(No symbol) [0x00E86DA6]\nE       \t(No symbol) [0x00E61034]\nE       \t(No symbol) [0x00E61F8D]\nE       \tGetHandleVerifier [0x012949CC+820268]\nE       \tsqlite3_dbdata_init [0x01354EBE+652494]\nE       \tsqlite3_dbdata_init [0x013548D9+650985]\nE       \tsqlite3_dbdata_init [0x0134962C+605244]\nE       \tsqlite3_dbdata_init [0x0135586B+654971]\nE       \t(No symbol) [0x0112FEBC]\nE       \t(No symbol) [0x01128428]\nE       \t(No symbol) [0x0112854D]\nE       \t(No symbol) [0x01115858]\nE       \tBaseThreadInitThunk [0x75B17BA9+25]\nE       \tRtlInitializeExceptionChain [0x7749BD2B+107]\nE       \tRtlClearBits [0x7749BCAF+191]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1702841663311,"stop":1702841665383,"duration":2072},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"make_failed_screenshot","time":{"start":1702841665383,"stop":1702841665383,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x011F6E73+174291]\n\t(No symbol) [0x01120AC1]\n\t(No symbol) [0x00E36FF6]\n\t(No symbol) [0x00E3AEAC]\n\t(No symbol) [0x00E3C585]\n\t(No symbol) [0x00E3C622]\n\t(No symbol) [0x00E6AF64]\n\t(No symbol) [0x00E6A5D5]\n\t(No symbol) [0x00E62B4E]\n\t(No symbol) [0x00E8700C]\n\t(No symbol) [0x00E625B0]\n\t(No symbol) [0x00E87414]\n\t(No symbol) [0x00E9A104]\n\t(No symbol) [0x00E86DA6]\n\t(No symbol) [0x00E61034]\n\t(No symbol) [0x00E61F8D]\n\tGetHandleVerifier [0x012949CC+820268]\n\tsqlite3_dbdata_init [0x01354EBE+652494]\n\tsqlite3_dbdata_init [0x013548D9+650985]\n\tsqlite3_dbdata_init [0x0134962C+605244]\n\tsqlite3_dbdata_init [0x0135586B+654971]\n\t(No symbol) [0x0112FEBC]\n\t(No symbol) [0x01128428]\n\t(No symbol) [0x0112854D]\n\t(No symbol) [0x01115858]\n\tBaseThreadInitThunk [0x75B17BA9+25]\n\tRtlInitializeExceptionChain [0x7749BD2B+107]\n\tRtlClearBits [0x7749BCAF+191]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"349fb4b87b336a0871ba0aad0da8b896\")>\n\n    @allure.feature(\"Login tests\")\n    def test_login(driver):\n        login = AirbnbLoginTest(driver)\n        login.open_login_page()\n>       login.perform_login(LoginLocators.EMAIL_INPUT, LoginLocators.PASSWORD_INPUT)\n\ntests\\ui\\test_login.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:28: in perform_login\n    profile_menu.click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022F328FB490>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...dInitThunk [0x75B17BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7749BD2B+107]\\\\n\\\\tRtlClearBits [0x7749BCAF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x011F6E73+174291]\nE       \t(No symbol) [0x01120AC1]\nE       \t(No symbol) [0x00E36FF6]\nE       \t(No symbol) [0x00E3AEAC]\nE       \t(No symbol) [0x00E3C585]\nE       \t(No symbol) [0x00E3C622]\nE       \t(No symbol) [0x00E6AF64]\nE       \t(No symbol) [0x00E6A5D5]\nE       \t(No symbol) [0x00E62B4E]\nE       \t(No symbol) [0x00E8700C]\nE       \t(No symbol) [0x00E625B0]\nE       \t(No symbol) [0x00E87414]\nE       \t(No symbol) [0x00E9A104]\nE       \t(No symbol) [0x00E86DA6]\nE       \t(No symbol) [0x00E61034]\nE       \t(No symbol) [0x00E61F8D]\nE       \tGetHandleVerifier [0x012949CC+820268]\nE       \tsqlite3_dbdata_init [0x01354EBE+652494]\nE       \tsqlite3_dbdata_init [0x013548D9+650985]\nE       \tsqlite3_dbdata_init [0x0134962C+605244]\nE       \tsqlite3_dbdata_init [0x0135586B+654971]\nE       \t(No symbol) [0x0112FEBC]\nE       \t(No symbol) [0x01128428]\nE       \t(No symbol) [0x0112854D]\nE       \t(No symbol) [0x01115858]\nE       \tBaseThreadInitThunk [0x75B17BA9+25]\nE       \tRtlInitializeExceptionChain [0x7749BD2B+107]\nE       \tRtlClearBits [0x7749BCAF+191]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException","steps":[],"attachments":[{"uid":"af6ee3a6c4072414","name":"stdout","source":"af6ee3a6c4072414.txt","type":"text/plain","size":44}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"make_failed_screenshot::0","time":{"start":1702841675066,"stop":1702841675334,"duration":268},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"driver::0","time":{"start":1702841675335,"stop":1702841677490,"duration":2155},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"feature","value":"Login tests"},{"name":"parentSuite","value":"tests.ui"},{"name":"suite","value":"test_login"},{"name":"host","value":"DESKTOP-064OCLQ"},{"name":"thread","value":"18540-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"d4dc5d520920bf01.json","parameterValues":[]}